input {
    jdbc {
        jdbc_connection_string => "jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}"
        jdbc_user => "${DB_USER}"
        jdbc_password => "${DB_PASSWORD}"
        jdbc_driver_class => "org.postgresql.Driver"
        jdbc_paging_enabled => true
        use_column_value => true

        # tracking_column => "updated_at"
        # tracking_column_type => "timestamp"
        tracking_column => "id"
        tracking_column_type => "numeric"

        schedule => "* */1 * * * *"

        # statement => "SELECT id, name, updated_at FROM public.product_registration WHERE updated_at > :sql_last_value AND updated_at < CURRENT_TIMESTAMP ORDER BY updated_at ASC"
        # statement => "SELECT id, name, updated_at FROM public.product_base_info WHERE (:sql_last_value IS NULL OR updated_at > :sql_last_value) ORDER BY updated_at ASC"
        statement => "SELECT id, name, updated_at FROM public.product_base_info WHERE (:sql_last_value IS NULL OR id > :sql_last_value) ORDER BY id ASC"

        last_run_metadata_path => "/usr/share/logstash/data/.logstash_jdbc_last_run"
    }
}

filter {
    mutate {
        convert => { "id" => "integer" }
        copy => {"id" => "[@metadata][_id]"}
        remove_field => ["@version", "@timestamp"]
    }
}

output {
    elasticsearch {
        hosts => ["http://${ELASTICSEARCH_HOST}:${ELASTICSEARCH_PORT}"]
        index => "products"
        document_id => "%{[@metadata][_id]}"
        user => "${ELASTICSEARCH_USER}"
        password => "${ELASTICSEARCH_PASSWORD}"
    }
}